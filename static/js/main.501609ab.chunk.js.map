{"version":3,"sources":["firebase.js","constants/index.js","contexts/AuthContext.js","contexts/ProjectContext.js","components/routes/PrivateRoute.js","components/routes/PublicRoute.js","components/auth/SharedStyles.js","components/auth/Logo.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/ResetPassword.js","components/main/navbar/AccountMenu.js","components/main/navbar/index.js","components/main/sidebar/Constants.js","components/main/sidebar/Projects.js","components/main/sidebar/AddProjectButton.js","components/main/extras/ProjectDialog.js","components/main/extras/ConfirmSnackbar.js","components/main/sidebar/index.js","components/main/body/ProjectMenu.js","components/main/extras/DeleteDialog.js","components/main/extras/TaskDialog.js","components/main/body/ProjectHeader.js","components/main/body/TaskMenu.js","components/main/body/Tasks.js","components/main/body/index.js","components/main/index.js","components/App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","database","firestore","constants","id","name","icon","anchorOrigin","vertical","horizontal","transformOrigin","AuthContext","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signUp","email","password","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signOut","resetPassword","sendPasswordResetEmail","Provider","ProjectContext","useProjectContext","ProjectProvider","setProjectId","project","setProject","tasks","setTasks","selectProject","collection","where","onSnapshot","snapshot","docs","map","doc","data","filter","task","today","Date","setHours","dueDate","split","dueDateParsed","completed","selectedProject","allTasks","PrivateRoute","Component","component","rest","render","props","to","PublicRoute","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","alert","width","form","submit","margin","link","textDecoration","color","palette","primary","main","logo","fontWeight","Logo","classes","Typography","variant","className","fontSize","SignUp","styles","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","Container","maxWidth","CssBaseline","Alert","severity","onSubmit","e","preventDefault","current","then","add","catch","err","message","TextField","required","fullWidth","label","inputRef","autoComplete","autoFocus","type","Button","Grid","container","justify","item","SignIn","xs","ResetPassword","setMessage","AccountMenu","anchorEl","closeSignOutMenu","handleSignOut","Menu","keepMounted","open","Boolean","onClose","getContentAnchorEl","MenuItem","onClick","appBar","zIndex","drawer","title","flexGrow","marginLeft","signOutMenu","marginRight","Navbar","setAnchorEl","AppBar","position","Toolbar","currentTarget","console","log","Constants","List","constant","ListItem","button","ListItemIcon","ListItemText","nested","paddingLeft","Projects","projects","setProjects","collapseOpen","setCollapseOpen","Collapse","in","timeout","unmountOnExit","disablePadding","addProject","bottom","paddingBottom","AddProjectButton","setAddProjectDialogOpen","size","ProjectDialog","dialogOpen","setDialogOpen","action","actionLabel","itemRef","Dialog","DialogTitle","DialogContent","defaultValue","DialogActions","snackbar","right","padding","paddingTop","ConfirmSnackbar","snackbarOpen","setSnackbarOpen","confirmMessage","Snackbar","autoHideDuration","flexShrink","drawerPaper","drawerContainer","overflow","Sidebar","addProjectDialogOpen","addProjectSnackbarOpen","setAddProjectSnackbarOpen","Drawer","Divider","projectName","userEmail","res","ProjectMenu","setEditProjectDialogOpen","setDeleteProjectDialogOpen","DeleteDialog","itemType","deleteFunc","DialogContentText","style","datePickerLabel","TaskDialog","currTask","taskRef","dueDateRef","projectHeader","justifyContent","marginBottom","ProjectHeader","editProjectDialogOpen","editProjectSnackbarOpen","setEditProjectSnackbarOpen","deleteProjectDialogOpen","deleteProjectSnackbarOpen","setDeleteProjectSnackbarOpen","addTaskDialogOpen","setAddTaskDialogOpen","addTaskSnackbarOpen","setAddTaskSnackbarOpen","IconButton","update","delete","get","querySnapshot","forEach","ref","TaskMenu","setEditTaskDialogOpen","setDeleteTaskDialogOpen","elipses","height","backgroundColor","borderRadius","Tasks","currTaskId","setCurrTaskId","setCurrTask","deleteTaskDialogOpen","deleteTaskSnackbarOpen","setDeleteTaskSnackbarOpen","editTaskDialogOpen","editTaskSnackbarOpen","setEditTaskSnackbarOpen","openTaskMenu","FormControlLabel","control","Checkbox","checked","onChange","taskId","target","Body","Main","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.501609ab.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n});\n\nexport default app;\nexport const auth = app.auth();\nexport const database = app.firestore();","import React from 'react';\nimport TodayIcon from '@material-ui/icons/Today';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport DataUsageIcon from '@material-ui/icons/DataUsage';\n\nexport const constants = [\n    { \n        id: 0, \n        name: 'Due today',\n        icon: <TodayIcon />\n    },\n    { \n        id: 1, \n        name: 'Due within 7 days',\n        icon: <DateRangeIcon />\n    },\n    { \n        id: 2, \n        name: 'All incomplete tasks',\n        icon: <DataUsageIcon />\n    }\n];\n\nexport const anchorOrigin = {\n    vertical: \"bottom\", \n    horizontal: \"center\"\n};\n\nexport const transformOrigin = {\n    vertical: 'top',\n    horizontal: 'center'\n};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../firebase';\n\nconst AuthContext = createContext();\nconst useAuth = () => useContext(AuthContext);\n\nconst AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n\n    const signUp = (email, password) => auth.createUserWithEmailAndPassword(email, password);\n    const signIn = (email, password) => auth.signInWithEmailAndPassword(email, password);\n    const signOut = () => auth.signOut();\n    const resetPassword = email => auth.sendPasswordResetEmail(email);\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            setLoading(false);\n        });\n    });\n\n    const value = { currentUser, signUp, signIn, signOut, resetPassword };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n};\n\nexport { useAuth, AuthProvider };","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { database } from '../firebase';\nimport { constants } from '../constants';\nimport { useAuth } from './AuthContext';\n\nconst ProjectContext = createContext();\nconst useProjectContext = () => useContext(ProjectContext);\n\nconst ProjectProvider = ({ children }) => {\n    const [projectId, setProjectId] = useState('');\n    const [project, setProject] = useState({});\n    const [tasks, setTasks] = useState([]);\n    const { currentUser } = useAuth();\n\n    useEffect(() => selectProject(0), []);\n\n    const selectProject = projectId => {\n        setProjectId(projectId);\n\n        if (projectId < 3) {\n            setProject(constants[projectId]);\n\n            database\n                .collection('tasks')\n                .where('userEmail', '==', currentUser.email)\n                .onSnapshot(snapshot =>\n                    setTasks(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }))\n                        .filter(task => {\n                            const today = new Date().setHours(0, 0, 0, 0);\n                            const dueDate = task.dueDate.split('-');\n                            const dueDateParsed = new Date(dueDate[0], dueDate[1] - 1, dueDate[2]).setHours(0, 0, 0, 0);\n\n                            switch (projectId) {\n                                case 0:\n                                    return dueDateParsed === today;\n                                case 1:\n                                    const oneWeekFromToday = today + (7 * 24 * 60 * 60 * 1000);\n                                    return (dueDateParsed >= today) && (dueDateParsed <= oneWeekFromToday);\n                                default:\n                                    return !task.completed;\n                            }\n                        })));\n        }\n\n        else {\n            const selectedProject = database.collection('projects').doc(projectId);\n            const allTasks = database.collection('tasks').where('projectId', '==', projectId);\n\n            selectedProject.onSnapshot(doc => setProject(doc.data()));\n\n            allTasks.onSnapshot(snapshot => \n                setTasks(snapshot.docs.map(doc => \n                    ({ id: doc.id, ...doc.data() }))));              \n        }\n    };\n\n    const value = { projectId, project, selectProject, tasks };\n\n    return (\n        <ProjectContext.Provider value={value}>\n            {children}\n        </ProjectContext.Provider>\n    );\n}\n\nexport { useProjectContext, ProjectProvider };","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useAuth } from '../../contexts';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n    const { currentUser } = useAuth();\n\n    return (\n        <Route\n            {...rest}\n            render={props => currentUser \n                ? <Component {...props} /> \n                : <Redirect to='/planr/sign-in' />\n            } />\n    );\n};","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useAuth } from '../../contexts';\n\nexport const PublicRoute = ({ component: Component, ...rest }) => {\n    const { currentUser } = useAuth();\n\n    return (\n        <Route\n            {...rest}\n            render={props => currentUser\n                ? <Redirect to='/planr' />\n                : <Component {...props} />\n            } />\n    );\n};","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    alert: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(2)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    link: {\n        textDecoration: 'none',\n        color: theme.palette.primary.main,\n        '&:hover': {\n            textDecoration: 'underline'\n        },\n    }\n}));","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport DoneOutline from '@material-ui/icons/DoneOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        color: theme.palette.primary.main,\n        fontWeight: '600',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    }\n}));\n\nconst Logo = () => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant='h5' className={classes.logo}>\n            <DoneOutline fontSize='large' /> taskly\n        </Typography>\n    );\n};\n\nexport default Logo;","import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useAuth } from '../../contexts';\nimport { database } from '../../firebase';\nimport { useStyles } from './SharedStyles';\nimport Logo from './Logo';\n\nconst SignUp = () => {\n    const styles = useStyles();\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const [error, setError] = useState('');\n    const { signUp } = useAuth();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        let email = emailRef.current.value;\n        let password = passwordRef.current.value;\n        let passwordConfirm = passwordConfirmRef.current.value;\n\n        if (password !== passwordConfirm) return setError('Passwords do not match.');\n\n        setError('');\n\n        signUp(email, password)\n            .then(() => database.collection('users').add({email}))\n            .catch(err => setError(err.message));\n    };\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline />\n            <div className={styles.paper}>\n                <Logo />\n                {error && <Alert severity=\"error\" className={styles.alert}>{error}</Alert>}\n                <form className={styles.form} onSubmit={handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Email\"\n                        inputRef={emailRef}\n                        autoComplete=\"email\"\n                        autoFocus />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Password\"\n                        type=\"password\"\n                        inputRef={passwordRef} />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Password Confirmation\"\n                        type=\"password\"\n                        inputRef={passwordConfirmRef} />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={styles.submit} >\n                        Sign up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link to='/planr/sign-in' className={styles.link}>\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default SignUp;","import React, { useRef, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Alert from '@material-ui/lab/Alert';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../../contexts';\nimport { useStyles } from './SharedStyles';\nimport Logo from './Logo';\n\nexport const SignIn = () => {\n  const styles = useStyles();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [error, setError] = useState('');\n  const { signIn } = useAuth();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let email = emailRef.current.value;\n    let password = passwordRef.current.value;\n\n    setError('');\n\n    signIn(email, password).catch(err => setError(err.message));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={styles.paper}>\n        <Logo />\n        {error && <Alert severity=\"error\" className={styles.alert}>{error}</Alert>}\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Email\"\n            autoComplete=\"email\"\n            autoFocus\n            inputRef={emailRef} />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            inputRef={passwordRef}\n            autoComplete=\"current-password\" />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={styles.submit} >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link to='/planr/reset-password' className={styles.link}>\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to='/planr/sign-up' className={styles.link}>\n                Don't have an account? Sign up\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default SignIn;","import React, { useRef, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Alert from '@material-ui/lab/Alert';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../../contexts';\nimport { useStyles } from './SharedStyles';\nimport Logo from './Logo';\n\nexport const ResetPassword = () => {\n  const styles = useStyles();\n  const emailRef = useRef();\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const { resetPassword } = useAuth();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let email = emailRef.current.value;\n    \n    setError('');\n    setMessage('');\n\n    resetPassword(email)\n      .then(() => setMessage('Check your inbox for further instructions.'))\n      .catch(err => setError(err.message));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={styles.paper}>\n        <Logo />\n        {error && <Alert severity=\"error\" className={styles.alert}>{error}</Alert>}\n        {message && <Alert severity=\"success\" className={styles.alert}>{message}</Alert>}\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Email\"\n            autoComplete=\"email\"\n            autoFocus\n            inputRef={emailRef} />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={styles.submit} >\n            Reset Password\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link to='/planr/sign-up' className={styles.link}>\n                Don't have an account? Sign up\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to='/planr/sign-in' className={styles.link}>\n                Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default ResetPassword;","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { anchorOrigin, transformOrigin } from '../../../constants';\n\nconst AccountMenu = ({ \n    anchorEl,\n    closeSignOutMenu,\n    handleSignOut\n}) => {\n    return (\n        <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={closeSignOutMenu}\n        getContentAnchorEl={null}\n        anchorOrigin={anchorOrigin}\n        transformOrigin={transformOrigin} >\n        <MenuItem onClick={handleSignOut}>Sign out</MenuItem>\n      </Menu>\n    );\n}\n\nexport default AccountMenu;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport DoneOutline from '@material-ui/icons/DoneOutline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { useAuth } from '../../../contexts';\nimport AccountMenu from './AccountMenu';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  title: {\n    flexGrow: 1,\n    fontWeight: 600,\n    marginLeft: 15\n  },\n  signOutMenu: {\n    marginRight: '-15px'\n  }\n}));\n\nconst Navbar = () => {\n    const styles = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const { signOut } = useAuth();\n\n    const handleSignOut = () => signOut().catch(err => console.log(err.message));\n    const openSignOutMenu = e => setAnchorEl(e.currentTarget);\n    const closeSignOutMenu = () => setAnchorEl(null);\n\n    return (\n      <AppBar position=\"fixed\" className={styles.appBar}>\n        <Toolbar>\n          <DoneOutline />\n          <Typography variant=\"h6\" className={styles.title}>\n            taskly\n          </Typography>\n          <Button color=\"inherit\" onClick={openSignOutMenu} className={styles.signOutMenu}>\n            <AccountCircle />\n          </Button>\n          <AccountMenu\n            anchorEl={anchorEl}\n            closeSignOutMenu={closeSignOutMenu}\n            handleSignOut={handleSignOut} />\n        </Toolbar>\n      </AppBar>\n    );\n};\n\nexport default Navbar;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { constants } from '../../../constants';\nimport { useProjectContext } from '../../../contexts';\n\nconst Constants = () => {\n    const { selectProject } = useProjectContext();\n\n    return (\n        <List>\n            {constants.map(constant =>\n                <ListItem\n                    button\n                    key={constant.id}\n                    onClick={() => selectProject(constant.id)} >\n                    <ListItemIcon>\n                        {constant.icon}\n                    </ListItemIcon>\n                    <ListItemText primary={constant.name} />\n                </ListItem>\n            )}\n        </List>\n    );\n}\n\nexport default Constants;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport TurnedInNotOutlinedIcon from '@material-ui/icons/TurnedInNotOutlined';\nimport { useAuth, useProjectContext } from '../../../contexts';\nimport { database } from '../../../firebase';\n\nconst useStyles = makeStyles(theme => ({\n    nested: {\n      paddingLeft: theme.spacing(4),\n    }\n}));\n\nconst Projects = () => {\n    const styles = useStyles();\n    const [projects, setProjects] = useState([]);\n    const [collapseOpen, setCollapseOpen] = useState(false);\n    const { selectProject } = useProjectContext();\n    const { currentUser } = useAuth();\n\n    useEffect(() => {\n        database.collection('projects')\n          .where('userEmail', '==', currentUser.email)\n          .onSnapshot(snapshot => {\n              setProjects(snapshot.docs.map(doc => ({\n                id: doc.id,\n                name: doc.data().name\n              })))          \n        });\n      }, [currentUser.email]);\n\n    const toggleCollapse = () => setCollapseOpen(!collapseOpen);\n\n    return (\n        <List>\n            <ListItem button onClick={toggleCollapse}>\n                <ListItemIcon>\n                    <CollectionsBookmarkIcon />\n                </ListItemIcon>\n                <ListItemText primary='Projects' />\n                {collapseOpen ? <ExpandMore /> : <ExpandLess />}\n            </ListItem>\n            <Collapse in={collapseOpen} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    {projects.map(project =>\n                        <ListItem\n                            button\n                            className={styles.nested}\n                            key={project.id}\n                            onClick={() => selectProject(project.id)} >\n                            <ListItemIcon>\n                                <TurnedInNotOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={project.name} />\n                        </ListItem>\n                    )}\n                </List>\n            </Collapse>\n        </List>\n    );\n}\n\nexport default Projects;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles(() => ({\n    addProject: {\n      position: 'fixed',\n      bottom: 0,\n      paddingBottom: 15,\n    },\n    button: {\n        fontWeight: 600\n    }\n}));\n\nconst AddProjectButton = ({ setAddProjectDialogOpen }) => {\n    const styles = useStyles();\n\n    return (\n        <List>\n            <ListItem className={styles.addProject}>\n                <Button\n                    variant='contained'\n                    size='small'\n                    color='primary'\n                    className={styles.button}\n                    onClick={() => setAddProjectDialogOpen(true)} >\n                    <AddIcon /> Add Project\n                </Button>\n            </ListItem>\n        </List>\n    );\n}\n\nexport default AddProjectButton;","import React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport { useProjectContext } from '../../../contexts';\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        fontWeight: 600\n    }\n}));\n\nconst ProjectDialog = ({ \n    dialogOpen,\n    setDialogOpen,\n    title,\n    action,\n    actionLabel\n}) => {\n    const { project } = useProjectContext();\n    const itemRef = useRef();\n    const styles = useStyles();\n\n    const preActionFunc = e => {\n        e.preventDefault();        \n        action(itemRef.current.value);\n    };\n\n    return (\n        <Dialog\n            open={dialogOpen}\n            fullWidth={true}\n            maxWidth=\"xs\"\n            onClose={() => setDialogOpen(false)} >\n            <DialogTitle>{title}</DialogTitle>\n            <form onSubmit={preActionFunc}>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        label='Project name'\n                        type='text'\n                        fullWidth\n                        defaultValue={actionLabel === \"Save\" && project ? project.name : null}\n                        inputRef={itemRef} />\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant='outlined'\n                        size='small'\n                        className={styles.button}\n                        color='primary'\n                        onClick={() => setDialogOpen(false)} >\n                        Cancel\n                    </Button>\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        size='small'\n                        className={styles.button}\n                        color='primary' >\n                        {actionLabel}\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};\n\nexport default ProjectDialog;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(() => ({\n    snackbar: {\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        padding: '0 15px 15px 0'\n    },\n    alert: {\n        paddingTop: 1,\n        paddingBottom: 1\n    }\n}));\n\nconst ConfirmSnackbar = ({\n    snackbarOpen,\n    setSnackbarOpen,\n    confirmMessage\n}) => {\n    const styles = useStyles();\n\n    return (\n        <Snackbar\n            open={snackbarOpen}\n            autoHideDuration={6000}\n            onClose={() => setSnackbarOpen(false)}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right'}}\n            className={styles.snackbar} >\n            <Alert\n                onClose={() => setSnackbarOpen(false)}\n                variant='outlined'\n                severity='success'\n                className={styles.alert} >\n                {confirmMessage}\n            </Alert>\n        </Snackbar>\n    );\n};\n\nexport default ConfirmSnackbar;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Divider from '@material-ui/core/Divider';\nimport { database } from '../../../firebase';\nimport { useAuth, useProjectContext } from '../../../contexts';\nimport Constants from './Constants';\nimport Projects from './Projects';\nimport AddProjectButton from './AddProjectButton';\nimport ProjectDialog from '../extras/ProjectDialog';\nimport ConfirmSnackbar from '../extras/ConfirmSnackbar';\n\nconst useStyles = makeStyles(() => ({\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 240,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  }\n}));\n\nconst Sidebar = () => {\n  const styles = useStyles();\n  const [addProjectDialogOpen, setAddProjectDialogOpen] = useState(false);\n  const [addProjectSnackbarOpen, setAddProjectSnackbarOpen] = useState(false);\n  const { currentUser } = useAuth();\n  const { selectProject } = useProjectContext();\n\n  const addProject = projectName => {\n    database\n      .collection('projects')\n      .add({\n        name: projectName,\n        userEmail: currentUser.email\n      })\n      .then(res => {\n        setAddProjectDialogOpen(false);\n        setAddProjectSnackbarOpen(true);\n        selectProject(res.id);\n      })\n      .catch(err => console.log(err.message));\n  };\n\n  return (\n    <Drawer\n      className={styles.drawer}\n      variant=\"permanent\"\n      styles={{paper: styles.drawerPaper}} >\n      <Toolbar />\n      <div className={styles.drawerContainer}>\n        <Constants />\n        <Divider />\n        <Projects />\n        <AddProjectButton setAddProjectDialogOpen={setAddProjectDialogOpen} />\n      </div>\n      <ProjectDialog\n        dialogOpen={addProjectDialogOpen}\n        setDialogOpen={setAddProjectDialogOpen}\n        title=\"Add new project\"\n        action={addProject}\n        actionLabel=\"Add\" />\n      <ConfirmSnackbar\n        snackbarOpen={addProjectSnackbarOpen}\n        setSnackbarOpen={setAddProjectSnackbarOpen}\n        confirmMessage=\"Project was added!\" />\n    </Drawer>\n  )\n}\n\nexport default Sidebar;","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { anchorOrigin, transformOrigin } from '../../../constants';\n\nconst ProjectMenu = ({ \n    anchorEl, \n    setAnchorEl, \n    setEditProjectDialogOpen, \n    setDeleteProjectDialogOpen \n}) => {\n    return (\n        <Menu\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={() => setAnchorEl(null)}\n            getContentAnchorEl={null}\n            anchorOrigin={anchorOrigin}\n            transformOrigin={transformOrigin} >\n            <MenuItem onClick={() => {\n                setAnchorEl(false);\n                setEditProjectDialogOpen(true);\n            }} >\n                Rename\n            </MenuItem>\n            <MenuItem onClick={() => {\n                setAnchorEl(false);\n                setDeleteProjectDialogOpen(true);\n            }} >\n                Delete\n            </MenuItem>\n        </Menu>\n    );\n}\n\nexport default ProjectMenu;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        fontWeight: 600\n    }\n}));\n\nconst DeleteDialog = ({ \n    itemType,\n    dialogOpen, \n    setDialogOpen,\n    deleteFunc \n}) => {\n    const styles = useStyles();\n    \n    return (\n        <Dialog maxWidth='xs' fullWidth={true} open={dialogOpen}>\n            <DialogTitle>Delete {itemType}?</DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{color: 'black'}}>\n                    Please confirm your action. \n                    {itemType === \"task\"\n                        ? \"This will permanently delete the task.\"\n                        : \"This will permanently delete the project as well as its containing tasks.\"}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button \n                    size='small' \n                    className={styles.button}\n                    variant='outlined' \n                    color=\"secondary\"\n                    onClick={() => setDialogOpen(false)} >\n                    Cancel\n                </Button>\n                <Button \n                    size='small' \n                    className={styles.button}\n                    variant='contained' \n                    color=\"secondary\"\n                    onClick={deleteFunc()} >\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default DeleteDialog;","import React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(() => ({\n    datePickerLabel: {\n        margin: '15px 0 -5px',\n        color: 'gray', \n        fontSize: 15\n    },\n    button: {\n        fontWeight: 600\n    }\n}));\n\nconst TaskDialog = ({\n    dialogOpen,\n    setDialogOpen,\n    title,\n    actionLabel,\n    action,\n    currTask\n}) => {\n    const taskRef = useRef();\n    const dueDateRef = useRef();\n    const styles = useStyles();\n\n    const preActionFunc = e => {\n        e.preventDefault();\n        action(\n            taskRef.current.value,\n            dueDateRef.current.value\n        );\n    };\n\n    return (\n        <Dialog\n            maxWidth='xs'\n            fullWidth={true}\n            open={dialogOpen} >\n            <DialogTitle>{title}</DialogTitle>\n            <form onSubmit={preActionFunc}>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        fullWidth\n                        label=\"Task\"\n                        type=\"text\"\n                        inputRef={taskRef}\n                        defaultValue={currTask ? currTask.task : null} />\n                    <div className={styles.datePickerLabel}>Due Date</div>\n                    <TextField\n                        margin=\"dense\"\n                        fullWidth\n                        type=\"date\"\n                        inputRef={dueDateRef}\n                        defaultValue={currTask ? currTask.dueDate : null} />\n                </DialogContent> \n                <DialogActions>\n                    <Button\n                        variant=\"outlined\"\n                        size='small'\n                        className={styles.button}\n                        onClick={() => setDialogOpen(false)} >\n                        Cancel\n                    </Button>\n                    <Button\n                        size='small'\n                        className={styles.button}\n                        variant='contained'\n                        color='primary'\n                        type='submit' >\n                        {actionLabel}\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};\n\nexport default TaskDialog;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ProjectMenu from './ProjectMenu';\nimport DeleteDialog from '../extras/DeleteDialog';\nimport TaskDialog from '../extras/TaskDialog';\nimport ProjectDialog from '../extras/ProjectDialog';\nimport ConfirmSnackbar from '../extras/ConfirmSnackbar';\nimport { useProjectContext } from '../../../contexts';\nimport { database } from '../../../firebase';\n\nconst useStyles = makeStyles(() => ({\n    projectHeader: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        fontWeight: 600,\n        marginBottom: 19\n    },\n    button: {\n        padding: 1,\n        margin: '0 5px',\n    }\n}));\n\nconst ProjectHeader = () => {\n    const styles = useStyles();\n    const { project, projectId, selectProject } = useProjectContext();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [editProjectDialogOpen, setEditProjectDialogOpen] = useState(false);\n    const [editProjectSnackbarOpen, setEditProjectSnackbarOpen] = useState(false);\n    const [deleteProjectDialogOpen, setDeleteProjectDialogOpen] = useState(false);\n    const [deleteProjectSnackbarOpen, setDeleteProjectSnackbarOpen] = useState(false);\n    const [addTaskDialogOpen, setAddTaskDialogOpen] = useState(false);\n    const [addTaskSnackbarOpen, setAddTaskSnackbarOpen] = useState(false);\n\n    const openProjectMenu = e => setAnchorEl(e.currentTarget);\n\n    const updateProject = projectName => {\n        database\n            .collection('projects')\n            .doc(projectId)\n            .update({ name: projectName })\n            .then(() => {\n                setEditProjectDialogOpen(false);\n                setEditProjectSnackbarOpen(true);\n            })\n            .catch(err => console.log(err));\n    };\n    \n    const deleteProject = () => e => {\n        database\n            .collection('projects')\n            .doc(projectId)\n            .delete()\n            .then(() => setDeleteProjectSnackbarOpen(true));\n\n        database\n            .collection('tasks')\n            .where('projectId', '==', projectId)\n            .get()\n            .then(querySnapshot => querySnapshot.forEach(doc => doc.ref.delete()));\n\n        setDeleteProjectDialogOpen(false);\n        selectProject(0);\n    };\n\n    const addTask = (task, dueDate) => {\n        database\n            .collection('tasks')\n            .add({\n                task: task,\n                completed: false,\n                projectId: projectId,\n                dueDate: dueDate\n            })\n            .then(() => {\n                setAddTaskDialogOpen(false);\n                setAddTaskSnackbarOpen(true);\n            })\n            .catch(err => console.log(err.message));\n    };\n\n    return (\n        <Typography variant='h6' className={styles.projectHeader}>\n            {project && project.name}\n            <span>\n                {typeof projectId === 'string' &&\n                    <>\n                        <IconButton \n                            className={styles.button} \n                            color='primary'\n                            onClick={() => setAddTaskDialogOpen(true)} >\n                            <AddIcon />\n                        </IconButton>  \n                        <IconButton \n                            className={styles.button} \n                            color='primary'\n                            onClick={openProjectMenu} >\n                            <MoreHorizIcon />   \n                        </IconButton>    \n                    </>\n                }\n                <ProjectMenu \n                    anchorEl={anchorEl} \n                    setAnchorEl={setAnchorEl} \n                    setEditProjectDialogOpen={setEditProjectDialogOpen} \n                    setDeleteProjectDialogOpen={setDeleteProjectDialogOpen} />\n            </span>\n            <ProjectDialog\n                dialogOpen={editProjectDialogOpen}\n                setDialogOpen={setEditProjectDialogOpen}\n                title=\"Edit project\"\n                action={updateProject}\n                actionLabel=\"Save\" />\n            <ConfirmSnackbar\n                snackbarOpen={editProjectSnackbarOpen}\n                setSnackbarOpen={setEditProjectSnackbarOpen}\n                confirmMessage=\"Project was updated!\" />\n            <DeleteDialog \n                itemType=\"project\"\n                dialogOpen={deleteProjectDialogOpen}\n                setDialogOpen={setDeleteProjectDialogOpen}\n                deleteFunc={deleteProject} />\n            <ConfirmSnackbar\n                snackbarOpen={deleteProjectSnackbarOpen}\n                setSnackbarOpen={setDeleteProjectSnackbarOpen}\n                confirmMessage=\"Project was deleted!\" />\n            <TaskDialog\n                dialogOpen={addTaskDialogOpen}\n                setDialogOpen={setAddTaskDialogOpen}\n                title='Add new task'\n                actionLabel=\"Add\"\n                action={addTask}\n                currTask={null} />\n            <ConfirmSnackbar\n                snackbarOpen={addTaskSnackbarOpen}\n                setSnackbarOpen={setAddTaskSnackbarOpen}\n                confirmMessage=\"Task was added!\" />\n        </Typography>\n    );\n}\n\nexport default ProjectHeader;","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { anchorOrigin, transformOrigin } from '../../../constants';\n\nconst TaskMenu = ({ \n    anchorEl, \n    setAnchorEl,\n    setEditTaskDialogOpen,\n    setDeleteTaskDialogOpen\n }) => {\n    return (\n        <Menu\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={() => setAnchorEl(null)}\n            getContentAnchorEl={null}\n            anchorOrigin={anchorOrigin}\n            transformOrigin={transformOrigin} >\n            <MenuItem onClick={() => {\n                setAnchorEl(false);\n                setEditTaskDialogOpen(true);\n            }} >\n                Edit\n            </MenuItem>\n            <MenuItem onClick={() => {\n                setAnchorEl(false);\n                setDeleteTaskDialogOpen(true);\n            }} >\n                Delete\n            </MenuItem>\n        </Menu>\n    );\n}\n\nexport default TaskMenu;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Divider from '@material-ui/core/Divider';\nimport { useProjectContext } from '../../../contexts';\nimport { database } from '../../../firebase';\nimport TaskMenu from './TaskMenu';\nimport DeleteDialog from '../extras/DeleteDialog';\nimport ConfirmSnackbar from '../extras/ConfirmSnackbar';\nimport TaskDialog from '../extras/TaskDialog';\n\nconst useStyles = makeStyles(theme => ({\n    tasks: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    task: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    elipses: {\n      color: 'black',\n      width: 10,\n      height: 10,\n      marginRight: 6\n    },\n    dueDate: {\n        backgroundColor: 'rgba(25, 118, 210, 0.2)',\n        color: theme.palette.primary.main,\n        fontSize: 13,\n        fontWeight: 600,\n        borderRadius: 10,\n        padding: '5px 10px',\n        marginRight: 10\n    }\n}));\n\nconst Tasks = () => {\n    const styles = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [currTaskId, setCurrTaskId] = useState('');\n    const [currTask, setCurrTask] = useState({});\n    const [deleteTaskDialogOpen, setDeleteTaskDialogOpen] = useState(false);\n    const [deleteTaskSnackbarOpen, setDeleteTaskSnackbarOpen] = useState(false);\n    const [editTaskDialogOpen, setEditTaskDialogOpen] = useState(false);\n    const [editTaskSnackbarOpen, setEditTaskSnackbarOpen] = useState(false);\n    const { tasks } = useProjectContext();\n\n    const toggleTaskComplete = taskId => e => {    \n        database\n          .collection('tasks')\n          .doc(taskId)\n          .update({ completed: e.target.checked });\n    };\n\n    const openTaskMenu = task => e => {\n        setCurrTaskId(task.id);\n        setCurrTask(task);\n        setAnchorEl(e.currentTarget);\n    };\n\n    const deleteTask = () => e => {\n        database\n          .collection('tasks')\n          .doc(currTaskId)\n          .delete()\n          .then(() => {\n            setDeleteTaskDialogOpen(false);\n            setDeleteTaskSnackbarOpen(true);\n          })\n    };\n\n    const updateTask = (task, dueDate) => {\n        database  \n          .collection('tasks')\n          .doc(currTaskId)\n          .update({\n            task,\n            dueDate\n          })\n          .then(() => {\n            setEditTaskDialogOpen(false);\n            setEditTaskSnackbarOpen(true);\n          });\n    };\n\n    return (\n        <div>\n            <Typography className={styles.tasks}>\n                {tasks.map(task =>\n                    <div key={task.id} className={styles.task}>\n                        <div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={task.completed}\n                                        size='small'\n                                        color='primary'\n                                        onChange={toggleTaskComplete(task.id)} />\n                                } />\n                            {task.task}\n                        </div>\n                        <div>\n                            <span className={styles.dueDate}>\n                                {task.dueDate}\n                            </span>\n                            <IconButton\n                                className={styles.elipses}\n                                onClick={openTaskMenu(task)} >\n                                <MoreHorizIcon />\n                            </IconButton>                            \n                        </div>\n                    </div>\n                )}\n            </Typography>\n            <Divider />\n            <TaskMenu \n                anchorEl={anchorEl}\n                setAnchorEl={setAnchorEl}\n                setEditTaskDialogOpen={setEditTaskDialogOpen}\n                setDeleteTaskDialogOpen={setDeleteTaskDialogOpen} />\n            <DeleteDialog\n                itemType=\"task\"\n                dialogOpen={deleteTaskDialogOpen}\n                setDialogOpen={setDeleteTaskDialogOpen}\n                deleteFunc={deleteTask} />\n            <ConfirmSnackbar\n                snackbarOpen={deleteTaskSnackbarOpen}\n                setSnackbarOpen={setDeleteTaskSnackbarOpen}\n                confirmMessage='Task was deleted!' />\n            <TaskDialog\n                dialogOpen={editTaskDialogOpen}\n                setDialogOpen={setEditTaskDialogOpen}\n                title=\"Edit task\"\n                actionLabel=\"Save\"\n                action={updateTask}\n                currTask={currTask} />\n            <ConfirmSnackbar\n                snackbarOpen={editTaskSnackbarOpen}\n                setSnackbarOpen={setEditTaskSnackbarOpen}\n                confirmMessage='Task was updated!' />\n        </div>\n    );\n}\n\nexport default Tasks;","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ProjectHeader from './ProjectHeader';\nimport Tasks from './Tasks';\n\nconst Body = () => {\n  return (\n    <main style={{flexGrow: '1', padding: '18px'}}>\n      <Toolbar />\n      <ProjectHeader />\n      <Tasks />\n    </main>\n  );\n}\n\nexport default Body;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Navbar from './navbar';\nimport Sidebar from './sidebar';\nimport Body from './body';\n\nconst Main = () => {\n  return (\n    <div style={{display: 'flex'}}>\n      <CssBaseline />\n      <Navbar />\n      <Sidebar />\n      <Body />\n    </div>\n  );\n};\n\nexport default Main;","import React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { AuthProvider, ProjectProvider } from '../contexts';\nimport { PrivateRoute, PublicRoute } from './routes';\nimport SignUp from './auth/SignUp';\nimport SignIn from './auth/SignIn';\nimport ResetPassword from './auth/ResetPassword';\nimport Main from './main';\n\nconst App = () => {\n  return (\n    <Router>\n      <AuthProvider>\n        <Switch>\n          <PublicRoute path='/planr/sign-up' component={SignUp} />\n          <PublicRoute path='/planr/sign-in' component={SignIn} />\n          <PublicRoute path='/planr/reset-password' component={ResetPassword} />\n          <ProjectProvider>\n            <PrivateRoute exact path='/planr' component={Main} />\n          </ProjectProvider>\n        </Switch>\n      </AuthProvider>      \n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}