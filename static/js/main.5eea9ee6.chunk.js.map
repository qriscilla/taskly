{"version":3,"sources":["firebase.js","contexts/AuthContext.js","constants/index.js","contexts/ProjectContext.js","components/routes/PrivateRoute.js","components/routes/PublicRoute.js","components/auth/SharedStyles.js","components/auth/Logo.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/ResetPassword.js","components/main/navbar/Title.js","components/main/navbar/AccountMenu.js","components/main/navbar/index.js","components/main/sidebar/Constants.js","components/main/sidebar/Projects.js","components/main/extras/ProjectDialog.js","components/main/extras/ConfirmSnackbar.js","components/main/sidebar/AddProject.js","components/main/sidebar/index.js","components/main/body/project-header/EditProject.js","components/main/extras/DeleteDialog.js","components/main/body/project-header/DeleteProject.js","components/main/body/project-header/ProjectMenu.js","components/main/extras/TaskDialog.js","components/main/body/project-header/AddTask.js","components/main/body/project-header/index.js","components/main/body/tasks/Checkbox.js","components/main/body/tasks/EditTask.js","components/main/body/tasks/DeleteTask.js","components/main/body/tasks/TaskMenu.js","components/main/body/tasks/index.js","components/main/body/index.js","components/main/index.js","components/App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","database","firestore","AuthContext","createContext","useAuthContext","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signUp","email","password","createUserWithEmailAndPassword","signIn","signInWithEmailAndPassword","signOut","resetPassword","sendPasswordResetEmail","Provider","constants","id","name","icon","anchorOrigin","vertical","horizontal","transformOrigin","ProjectContext","useProjectContext","ProjectProvider","project","setProject","tasks","setTasks","selectProject","collection","where","onSnapshot","snapshot","docs","map","doc","data","filter","task","today","Date","setHours","dueDate","split","dueDateParsed","completed","PrivateRoute","Component","component","rest","render","props","to","PublicRoute","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","alert","width","form","submit","margin","link","textDecoration","color","palette","primary","main","logo","fontWeight","Logo","classes","Typography","variant","className","fontSize","SignUp","styles","emailRef","useRef","passwordRef","passwordConfirmRef","error","setError","Container","maxWidth","CssBaseline","Alert","severity","onSubmit","e","preventDefault","current","then","add","catch","err","message","TextField","required","fullWidth","label","inputRef","autoComplete","autoFocus","type","Button","Grid","container","justify","item","SignIn","xs","ResetPassword","setMessage","title","flexGrow","marginLeft","signOutMenu","marginRight","Title","openSignOutMenu","onClick","AccountMenu","anchorEl","closeSignOutMenu","Menu","keepMounted","open","Boolean","onClose","getContentAnchorEl","MenuItem","console","log","appBar","zIndex","drawer","Navbar","setAnchorEl","AppBar","position","Toolbar","currentTarget","Constants","List","constant","ListItem","button","ListItemIcon","ListItemText","nested","paddingLeft","Projects","projects","setProjects","collapseOpen","setCollapseOpen","Collapse","in","timeout","unmountOnExit","disablePadding","ProjectDialog","dialogOpen","setDialogOpen","action","actionLabel","itemRef","Dialog","DialogTitle","DialogContent","defaultValue","DialogActions","size","snackbar","bottom","right","padding","paddingTop","paddingBottom","ConfirmSnackbar","snackbarOpen","setSnackbarOpen","confirmMessage","Snackbar","autoHideDuration","addProject","AddProject","addProjectDialogOpen","setAddProjectDialogOpen","addProjectSnackbarOpen","setAddProjectSnackbarOpen","projectName","userEmail","res","flexShrink","drawerPaper","drawerContainer","overflow","Sidebar","Drawer","Divider","EditProject","editProjectDialogOpen","setEditProjectDialogOpen","editProjectSnackbarOpen","setEditProjectSnackbarOpen","update","DeleteDialog","itemType","deleteFunc","DialogContentText","style","DeleteProject","deleteProjectDialogOpen","setDeleteProjectDialogOpen","deleteProjectSnackbarOpen","setDeleteProjectSnackbarOpen","delete","get","querySnapshot","forEach","ref","ProjectMenu","datePickerLabel","TaskDialog","currTask","taskRef","dueDateRef","projectHeader","justifyContent","marginBottom","AddTask","addTaskDialogOpen","setAddTaskDialogOpen","addTaskSnackbarOpen","setAddTaskSnackbarOpen","IconButton","ProjectHeader","Checkbox","taskId","FormControlLabel","control","checked","onChange","target","EditTask","editTaskDialogOpen","setEditTaskDialogOpen","editTaskSnackbarOpen","setEditTaskSnackbarOpen","DeleteTask","deleteTaskDialogOpen","setDeleteTaskDialogOpen","deleteTaskSnackbarOpen","setDeleteTaskSnackbarOpen","TaskMenu","elipses","height","backgroundColor","borderRadius","Tasks","setCurrTask","openTaskMenu","Body","Main","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5eea9ee6.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\n});\n\nexport default app;\nexport const auth = app.auth();\nexport const database = app.firestore();","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { auth } from '../firebase';\n\nconst AuthContext = createContext();\nconst useAuthContext = () => useContext(AuthContext);\n\nconst AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState();\n    const [loading, setLoading] = useState(true);\n\n    const signUp = (email, password) => auth.createUserWithEmailAndPassword(email, password);\n    const signIn = (email, password) => auth.signInWithEmailAndPassword(email, password);\n    const signOut = () => auth.signOut();\n    const resetPassword = email => auth.sendPasswordResetEmail(email);\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n            setLoading(false);\n        });\n    });\n\n    const value = { currentUser, signUp, signIn, signOut, resetPassword };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {!loading && children}\n        </AuthContext.Provider>\n    );\n};\n\nexport { AuthProvider, useAuthContext };","import React from 'react';\nimport TodayIcon from '@material-ui/icons/Today';\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport DataUsageIcon from '@material-ui/icons/DataUsage';\n\nexport const constants = [\n    { \n        id: 0, \n        name: 'Due today',\n        icon: <TodayIcon />\n    },\n    { \n        id: 1, \n        name: 'Due within 7 days',\n        icon: <DateRangeIcon />\n    },\n    { \n        id: 2, \n        name: 'All incomplete tasks',\n        icon: <DataUsageIcon />\n    }\n];\n\nexport const anchorOrigin = {\n    vertical: \"bottom\", \n    horizontal: \"center\"\n};\n\nexport const transformOrigin = {\n    vertical: 'top',\n    horizontal: 'center'\n};","import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { database } from '../firebase';\nimport { constants } from '../constants';\nimport { useAuthContext } from './AuthContext';\n\nconst ProjectContext = createContext();\nconst useProjectContext = () => useContext(ProjectContext);\n\nconst ProjectProvider = ({ children }) => {\n    const [project, setProject] = useState({});\n    const [tasks, setTasks] = useState([]);\n    const { currentUser } = useAuthContext();\n\n    // Upon mounting, load tasks that are \"Due today\"\n    useEffect(() => {\n        selectProject(0);\n        // eslint-disable-next-line\n    }, []);\n\n    const selectProject = projectId => {\n        if (!currentUser) return;\n        \n        // If the selected project is a constant\n        if (projectId < 3) {\n            setProject(constants[projectId]);\n\n            database\n                .collection('tasks')\n                .where('userEmail', '==', currentUser.email)\n                .onSnapshot(snapshot =>\n                    setTasks(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }))\n                        .filter(task => {\n                            const today = new Date().setHours(0, 0, 0, 0);\n                            const dueDate = task.dueDate.split('-');\n                            const dueDateParsed = new Date(dueDate[0], dueDate[1] - 1, dueDate[2]).setHours(0, 0, 0, 0);\n\n                            switch (projectId) {\n                                case 0:\n                                    return dueDateParsed === today;\n                                case 1:\n                                    const oneWeekFromToday = today + (7 * 24 * 60 * 60 * 1000);\n                                    return (dueDateParsed >= today) && (dueDateParsed <= oneWeekFromToday);\n                                default:\n                                    return !task.completed;\n                            }\n                        })));\n        }\n\n        // If the selected project is a custom-made\n        else {\n            // Set (or update) selected project\n            database\n                .collection('projects')\n                .doc(projectId)\n                .onSnapshot(doc => setProject({ id: doc.id, ...doc.data()}));\n\n            // Set (or update) tasks by the selected project\n            database\n                .collection('tasks')\n                .where('projectId', '==', projectId)\n                .onSnapshot(snapshot => \n                    setTasks(snapshot.docs.map(doc => \n                        ({ id: doc.id, ...doc.data() }))));              \n        }\n    };\n\n    const value = { project, tasks, selectProject };\n\n    return (\n        <ProjectContext.Provider value={value}>\n            {children}\n        </ProjectContext.Provider>\n    );\n}\n\nexport { ProjectProvider, useProjectContext };","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useAuthContext } from '../../contexts';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n    const { currentUser } = useAuthContext();\n\n    return (\n        <Route\n            {...rest}\n            render={props => currentUser \n                ? <Component {...props} /> \n                : <Redirect to='/planr/sign-in' />\n            } />\n    );\n};","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useAuthContext } from '../../contexts';\n\nexport const PublicRoute = ({ component: Component, ...rest }) => {\n    const { currentUser } = useAuthContext();\n\n    return (\n        <Route\n            {...rest}\n            render={props => currentUser\n                ? <Redirect to='/planr' />\n                : <Component {...props} />\n            } />\n    );\n};","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    alert: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(2)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    link: {\n        textDecoration: 'none',\n        color: theme.palette.primary.main,\n        '&:hover': {\n            textDecoration: 'underline'\n        },\n    }\n}));","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport DoneOutline from '@material-ui/icons/DoneOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    logo: {\n        color: theme.palette.primary.main,\n        fontWeight: '600',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    }\n}));\n\nconst Logo = () => {\n    const classes = useStyles();\n\n    return (\n        <Typography variant='h5' className={classes.logo}>\n            <DoneOutline fontSize='large' /> taskly\n        </Typography>\n    );\n};\n\nexport default Logo;","import React, { useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useAuthContext } from '../../contexts';\nimport { database } from '../../firebase';\nimport { useStyles } from './SharedStyles';\nimport Logo from './Logo';\n\nconst SignUp = () => {\n    const styles = useStyles();\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n    const [error, setError] = useState('');\n    const { signUp } = useAuthContext();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        let email = emailRef.current.value;\n        let password = passwordRef.current.value;\n        let passwordConfirm = passwordConfirmRef.current.value;\n\n        if (password !== passwordConfirm) return setError('Passwords do not match.');\n\n        setError('');\n\n        signUp(email, password)\n            .then(() => database.collection('users').add({email}))\n            .catch(err => setError(err.message));\n    };\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline />\n            <div className={styles.paper}>\n                <Logo />\n                {error && <Alert severity=\"error\" className={styles.alert}>{error}</Alert>}\n                <form className={styles.form} onSubmit={handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Email\"\n                        inputRef={emailRef}\n                        autoComplete=\"email\"\n                        autoFocus />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Password\"\n                        type=\"password\"\n                        inputRef={passwordRef} />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        label=\"Password Confirmation\"\n                        type=\"password\"\n                        inputRef={passwordConfirmRef} />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={styles.submit} >\n                        Sign up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link to='/planr/sign-in' className={styles.link}>\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nexport default SignUp;","import React, { useRef, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Alert from '@material-ui/lab/Alert';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport { useAuthContext } from '../../contexts';\nimport { useStyles } from './SharedStyles';\nimport Logo from './Logo';\n\nexport const SignIn = () => {\n  const styles = useStyles();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [error, setError] = useState('');\n  const { signIn } = useAuthContext();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let email = emailRef.current.value;\n    let password = passwordRef.current.value;\n\n    setError('');\n\n    signIn(email, password).catch(err => setError(err.message));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={styles.paper}>\n        <Logo />\n        {error && <Alert severity=\"error\" className={styles.alert}>{error}</Alert>}\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Email\"\n            autoComplete=\"email\"\n            autoFocus\n            inputRef={emailRef} />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            inputRef={passwordRef}\n            autoComplete=\"current-password\" />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={styles.submit} >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link to='/planr/reset-password' className={styles.link}>\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to='/planr/sign-up' className={styles.link}>\n                Don't have an account? Sign up\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default SignIn;","import React, { useRef, useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Alert from '@material-ui/lab/Alert';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport { useAuthContext } from '../../contexts';\nimport { useStyles } from './SharedStyles';\nimport Logo from './Logo';\n\nexport const ResetPassword = () => {\n  const styles = useStyles();\n  const emailRef = useRef();\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const { resetPassword } = useAuthContext();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let email = emailRef.current.value;\n    \n    setError('');\n    setMessage('');\n\n    resetPassword(email)\n      .then(() => setMessage('Check your inbox for further instructions.'))\n      .catch(err => setError(err.message));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={styles.paper}>\n        <Logo />\n        {error && <Alert severity=\"error\" className={styles.alert}>{error}</Alert>}\n        {message && <Alert severity=\"success\" className={styles.alert}>{message}</Alert>}\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Email\"\n            autoComplete=\"email\"\n            autoFocus\n            inputRef={emailRef} />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={styles.submit} >\n            Reset Password\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link to='/planr/sign-up' className={styles.link}>\n                Don't have an account? Sign up\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to='/planr/sign-in' className={styles.link}>\n                Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default ResetPassword;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DoneOutline from '@material-ui/icons/DoneOutline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles(() => ({\n    title: {\n      flexGrow: 1,\n      fontWeight: 600,\n      marginLeft: 15\n    },\n    signOutMenu: {\n      marginRight: '-15px'\n    }\n  }));\n\nconst Title = ({ openSignOutMenu }) => {\n    const styles = useStyles();\n\n    return (\n        <>\n            <DoneOutline />\n            <Typography variant=\"h6\" className={styles.title}>\n                taskly\n            </Typography>\n            <Button color=\"inherit\" onClick={openSignOutMenu} className={styles.signOutMenu}>\n                <AccountCircle />\n            </Button>\n        </>\n    );\n}\n\nexport default Title;","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { anchorOrigin, transformOrigin } from '../../../constants';\nimport { useAuthContext } from '../../../contexts';\n\nconst AccountMenu = ({ anchorEl, closeSignOutMenu }) => {\n    const { signOut } = useAuthContext();\n\n    const handleSignOut = () => signOut().catch(err => console.log(err.message));\n\n    return (\n        <Menu\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={closeSignOutMenu}\n            getContentAnchorEl={null}\n            anchorOrigin={anchorOrigin}\n            transformOrigin={transformOrigin} >\n            <MenuItem onClick={handleSignOut}>Sign out</MenuItem>\n        </Menu>\n    );\n}\n\nexport default AccountMenu;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Title from './Title';\nimport AccountMenu from './AccountMenu';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  }\n}));\n\nconst Navbar = () => {\n    const styles = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const openSignOutMenu = e => setAnchorEl(e.currentTarget);\n    const closeSignOutMenu = () => setAnchorEl(null);\n\n    return (\n      <AppBar position=\"fixed\" className={styles.appBar}>\n        <Toolbar>\n          <Title\n            openSignOutMenu={openSignOutMenu} />\n          <AccountMenu\n            anchorEl={anchorEl}\n            closeSignOutMenu={closeSignOutMenu} />\n        </Toolbar>\n      </AppBar>\n    );\n};\n\nexport default Navbar;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { constants } from '../../../constants';\nimport { useProjectContext } from '../../../contexts';\n\nconst Constants = () => {\n    const { selectProject } = useProjectContext();\n\n    return (\n        <List>\n            {constants.map(constant =>\n                <ListItem\n                    button\n                    key={constant.id}\n                    onClick={() => selectProject(constant.id)} >\n                    <ListItemIcon>\n                        {constant.icon}\n                    </ListItemIcon>\n                    <ListItemText primary={constant.name} />\n                </ListItem>\n            )}\n        </List>\n    );\n}\n\nexport default Constants;","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport TurnedInNotOutlinedIcon from '@material-ui/icons/TurnedInNotOutlined';\nimport { useAuthContext, useProjectContext } from '../../../contexts';\nimport { database } from '../../../firebase';\n\nconst useStyles = makeStyles(theme => ({\n    nested: {\n      paddingLeft: theme.spacing(4),\n    }\n}));\n\nconst Projects = () => {\n    const styles = useStyles();\n    const [projects, setProjects] = useState([]);\n    const [collapseOpen, setCollapseOpen] = useState(false);\n    const { selectProject } = useProjectContext();\n    const { currentUser } = useAuthContext();\n\n    useEffect(() => {\n        database.collection('projects')\n          .where('userEmail', '==', currentUser.email)\n          .onSnapshot(snapshot => {\n              setProjects(snapshot.docs.map(doc => ({\n                id: doc.id,\n                name: doc.data().name\n              })))          \n        });\n      }, [currentUser.email]);\n\n    const toggleCollapse = () => setCollapseOpen(!collapseOpen);\n\n    return (\n        <List>\n            <ListItem button onClick={toggleCollapse}>\n                <ListItemIcon>\n                    <CollectionsBookmarkIcon />\n                </ListItemIcon>\n                <ListItemText primary='Projects' />\n                {collapseOpen ? <ExpandMore /> : <ExpandLess />}\n            </ListItem>\n            <Collapse in={collapseOpen} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    {projects.map(project =>\n                        <ListItem\n                            button\n                            className={styles.nested}\n                            key={project.id}\n                            onClick={() => selectProject(project.id)} >\n                            <ListItemIcon>\n                                <TurnedInNotOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={project.name} />\n                        </ListItem>\n                    )}\n                </List>\n            </Collapse>\n        </List>\n    );\n}\n\nexport default Projects;","import React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport { useProjectContext } from '../../../contexts';\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        fontWeight: 600\n    }\n}));\n\nconst ProjectDialog = ({ \n    dialogOpen,\n    setDialogOpen,\n    title,\n    action,\n    actionLabel\n}) => {\n    const { project } = useProjectContext();\n    const itemRef = useRef();\n    const styles = useStyles();\n\n    const preActionFunc = e => {\n        e.preventDefault();        \n        action(itemRef.current.value);\n    };\n\n    return (\n        <Dialog\n            open={dialogOpen}\n            fullWidth={true}\n            maxWidth=\"xs\"\n            onClose={() => setDialogOpen(false)} >\n            <DialogTitle>{title}</DialogTitle>\n            <form onSubmit={preActionFunc}>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin='dense'\n                        label='Project name'\n                        type='text'\n                        fullWidth\n                        defaultValue={actionLabel === \"Save\" && project ? project.name : null}\n                        inputRef={itemRef} />\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        variant='outlined'\n                        size='small'\n                        className={styles.button}\n                        color='primary'\n                        onClick={() => setDialogOpen(false)} >\n                        Cancel\n                    </Button>\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        size='small'\n                        className={styles.button}\n                        color='primary' >\n                        {actionLabel}\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};\n\nexport default ProjectDialog;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(() => ({\n    snackbar: {\n        position: \"fixed\",\n        bottom: 0,\n        right: 0,\n        padding: '0 15px 15px 0'\n    },\n    alert: {\n        paddingTop: 1,\n        paddingBottom: 1\n    }\n}));\n\nconst ConfirmSnackbar = ({\n    snackbarOpen,\n    setSnackbarOpen,\n    confirmMessage\n}) => {\n    const styles = useStyles();\n\n    return (\n        <Snackbar\n            open={snackbarOpen}\n            autoHideDuration={6000}\n            onClose={() => setSnackbarOpen(false)}\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'right'}}\n            className={styles.snackbar} >\n            <Alert\n                onClose={() => setSnackbarOpen(false)}\n                variant='outlined'\n                severity='success'\n                className={styles.alert} >\n                {confirmMessage}\n            </Alert>\n        </Snackbar>\n    );\n};\n\nexport default ConfirmSnackbar;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport { database } from '../../../firebase';\nimport { useAuthContext, useProjectContext } from '../../../contexts';\nimport ProjectDialog from '../extras/ProjectDialog';\nimport ConfirmSnackbar from '../extras/ConfirmSnackbar';\n\nconst useStyles = makeStyles(() => ({\n    addProject: {\n      position: 'fixed',\n      bottom: 0,\n      paddingBottom: 15,\n    },\n    button: {\n        fontWeight: 600\n    }\n}));\n\nconst AddProject = () => {\n    const styles = useStyles();\n    const [addProjectDialogOpen, setAddProjectDialogOpen] = useState(false);\n    const [addProjectSnackbarOpen, setAddProjectSnackbarOpen] = useState(false);\n    const { currentUser } = useAuthContext();\n    const { selectProject } = useProjectContext();\n\n    const addProject = projectName => {\n        database\n          .collection('projects')\n          .add({\n            name: projectName,\n            userEmail: currentUser.email\n          })\n          .then(res => {\n            setAddProjectDialogOpen(false);\n            setAddProjectSnackbarOpen(true);\n            selectProject(res.id);\n          })\n          .catch(err => console.log(err.message));\n    };\n\n    return (\n        <div>\n            <List>\n                <ListItem className={styles.addProject}>\n                    <Button\n                        variant='contained'\n                        size='small'\n                        color='primary'\n                        className={styles.button}\n                        onClick={() => setAddProjectDialogOpen(true)} >\n                        <AddIcon /> Add Project\n                    </Button>\n                </ListItem>\n            </List>\n\n            <ProjectDialog\n                dialogOpen={addProjectDialogOpen}\n                setDialogOpen={setAddProjectDialogOpen}\n                title=\"Add new project\"\n                action={addProject}\n                actionLabel=\"Add\" />\n            <ConfirmSnackbar\n                snackbarOpen={addProjectSnackbarOpen}\n                setSnackbarOpen={setAddProjectSnackbarOpen}\n                confirmMessage=\"Project was added!\" />\n        </div>\n    );\n}\n\nexport default AddProject;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Divider from '@material-ui/core/Divider';\nimport Constants from './Constants';\nimport Projects from './Projects';\nimport AddProject from './AddProject';\n\nconst useStyles = makeStyles(() => ({\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 240,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  }\n}));\n\nconst Sidebar = () => {\n  const styles = useStyles();\n\n  return (\n    <Drawer\n      className={styles.drawer}\n      variant=\"permanent\"\n      styles={{paper: styles.drawerPaper}} >\n      <Toolbar />\n      <div className={styles.drawerContainer}>\n        <Constants />\n        <Divider />\n        <Projects />\n        <AddProject />\n      </div>\n    </Drawer>\n  )\n}\n\nexport default Sidebar;","import React, { useState } from 'react';\nimport ProjectDialog from '../../extras/ProjectDialog';\nimport ConfirmSnackbar from '../../extras/ConfirmSnackbar';\nimport { database } from '../../../../firebase';\nimport { useProjectContext } from '../../../../contexts';\n\nconst EditProject = ({\n    editProjectDialogOpen,\n    setEditProjectDialogOpen\n}) => {\n    const { project } = useProjectContext();\n    const [editProjectSnackbarOpen, setEditProjectSnackbarOpen] = useState(false);\n\n    const updateProject = projectName => {\n        database\n            .collection('projects')\n            .doc(project.id)\n            .update({ name: projectName })\n            .then(() => {\n                setEditProjectDialogOpen(false);\n                setEditProjectSnackbarOpen(true);\n            })\n            .catch(err => console.log(err));\n    };\n\n    return (\n        <>\n            <ProjectDialog\n                dialogOpen={editProjectDialogOpen}\n                setDialogOpen={setEditProjectDialogOpen}\n                title=\"Edit project\"\n                action={updateProject}\n                actionLabel=\"Save\" />\n            <ConfirmSnackbar\n                snackbarOpen={editProjectSnackbarOpen}\n                setSnackbarOpen={setEditProjectSnackbarOpen}\n                confirmMessage=\"Project was updated!\" />\n        </>\n    );\n}\n\nexport default EditProject;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        fontWeight: 600\n    }\n}));\n\nconst DeleteDialog = ({ \n    itemType,\n    dialogOpen, \n    setDialogOpen,\n    deleteFunc \n}) => {\n    const styles = useStyles();\n    \n    return (\n        <Dialog maxWidth='xs' fullWidth={true} open={dialogOpen}>\n            <DialogTitle>Delete {itemType}?</DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{color: 'black'}}>\n                    Please confirm your action. \n                    {itemType === \"task\"\n                        ? \"This will permanently delete the task.\"\n                        : \"This will permanently delete the project as well as its containing tasks.\"}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button \n                    size='small' \n                    className={styles.button}\n                    variant='outlined' \n                    color=\"secondary\"\n                    onClick={() => setDialogOpen(false)} >\n                    Cancel\n                </Button>\n                <Button \n                    size='small' \n                    className={styles.button}\n                    variant='contained' \n                    color=\"secondary\"\n                    onClick={deleteFunc()} >\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default DeleteDialog;","import React, { useState } from 'react';\nimport DeleteDialog from '../../extras/DeleteDialog';\nimport ConfirmSnackbar from '../../extras/ConfirmSnackbar';\nimport { database } from '../../../../firebase';\nimport { useProjectContext } from '../../../../contexts';\n\nconst DeleteProject = ({\n    deleteProjectDialogOpen,\n    setDeleteProjectDialogOpen\n}) => {\n    const { project, selectProject } = useProjectContext();\n    const [deleteProjectSnackbarOpen, setDeleteProjectSnackbarOpen] = useState(false);\n\n    const deleteProject = () => e => {\n        database\n            .collection('projects')\n            .doc(project.id)\n            .delete()\n            .then(() => setDeleteProjectSnackbarOpen(true));\n\n        database\n            .collection('tasks')\n            .where('projectId', '==', project.id)\n            .get()\n            .then(querySnapshot => querySnapshot.forEach(doc => doc.ref.delete()));\n\n        setDeleteProjectDialogOpen(false);\n        selectProject(0);\n    };\n\n    return (\n        <>\n            <DeleteDialog \n                itemType=\"project\"\n                dialogOpen={deleteProjectDialogOpen}\n                setDialogOpen={setDeleteProjectDialogOpen}\n                deleteFunc={deleteProject} />\n            <ConfirmSnackbar\n                snackbarOpen={deleteProjectSnackbarOpen}\n                setSnackbarOpen={setDeleteProjectSnackbarOpen}\n                confirmMessage=\"Project was deleted!\" />\n        </>\n    );\n}\n\nexport default DeleteProject;","import React, { useState } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { anchorOrigin, transformOrigin } from '../../../../constants';\nimport EditProject from './EditProject';\nimport DeleteProject from './DeleteProject';\n\nconst ProjectMenu = ({ anchorEl, setAnchorEl }) => {\n    const [editProjectDialogOpen, setEditProjectDialogOpen] = useState(false);\n    const [deleteProjectDialogOpen, setDeleteProjectDialogOpen] = useState(false);\n\n    const proceedEditProject = () => {\n        setAnchorEl(false);\n        setEditProjectDialogOpen(true);\n    };\n\n    const proceedDeleteProject = () => {\n        setAnchorEl(false);\n        setDeleteProjectDialogOpen(true);\n    };\n\n    return (\n        <>\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={() => setAnchorEl(null)}\n                getContentAnchorEl={null}\n                anchorOrigin={anchorOrigin}\n                transformOrigin={transformOrigin} >\n                <MenuItem onClick={proceedEditProject}>\n                    Rename\n                </MenuItem>\n                <MenuItem onClick={proceedDeleteProject}>\n                    Delete\n                </MenuItem>\n            </Menu>\n\n            <EditProject\n                editProjectDialogOpen={editProjectDialogOpen}\n                setEditProjectDialogOpen={setEditProjectDialogOpen} />\n\n            <DeleteProject \n                deleteProjectDialogOpen={deleteProjectDialogOpen}\n                setDeleteProjectDialogOpen={setDeleteProjectDialogOpen} />\n        </>\n    );\n}\n\nexport default ProjectMenu;","import React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(() => ({\n    datePickerLabel: {\n        margin: '15px 0 -5px',\n        color: 'gray', \n        fontSize: 15\n    },\n    button: {\n        fontWeight: 600\n    }\n}));\n\nconst TaskDialog = ({\n    dialogOpen,\n    setDialogOpen,\n    title,\n    actionLabel,\n    action,\n    currTask\n}) => {\n    const taskRef = useRef();\n    const dueDateRef = useRef();\n    const styles = useStyles();\n\n    const preActionFunc = e => {\n        e.preventDefault();\n        action(\n            taskRef.current.value,\n            dueDateRef.current.value\n        );\n    };\n\n    return (\n        <Dialog\n            maxWidth='xs'\n            fullWidth={true}\n            open={dialogOpen} >\n            <DialogTitle>{title}</DialogTitle>\n            <form onSubmit={preActionFunc}>\n                <DialogContent>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        fullWidth\n                        label=\"Task\"\n                        type=\"text\"\n                        inputRef={taskRef}\n                        defaultValue={currTask ? currTask.task : null} />\n                    <div className={styles.datePickerLabel}>Due Date</div>\n                    <TextField\n                        margin=\"dense\"\n                        fullWidth\n                        type=\"date\"\n                        inputRef={dueDateRef}\n                        defaultValue={currTask ? currTask.dueDate : null} />\n                </DialogContent> \n                <DialogActions>\n                    <Button\n                        variant=\"outlined\"\n                        size='small'\n                        className={styles.button}\n                        onClick={() => setDialogOpen(false)} >\n                        Cancel\n                    </Button>\n                    <Button\n                        size='small'\n                        className={styles.button}\n                        variant='contained'\n                        color='primary'\n                        type='submit' >\n                        {actionLabel}\n                    </Button>\n                </DialogActions>\n            </form>\n        </Dialog>\n    );\n};\n\nexport default TaskDialog;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport { database } from '../../../../firebase';\nimport { useProjectContext, useAuthContext } from '../../../../contexts';\nimport TaskDialog from '../../extras/TaskDialog';\nimport ConfirmSnackbar from '../../extras/ConfirmSnackbar';\n\nconst useStyles = makeStyles(() => ({\n    projectHeader: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        fontWeight: 600,\n        marginBottom: 19\n    },\n    button: {\n        padding: 1,\n        margin: '0 5px',\n    }\n}));\n\nconst AddTask = () => {\n    const styles = useStyles();\n    const [addTaskDialogOpen, setAddTaskDialogOpen] = useState(false);\n    const [addTaskSnackbarOpen, setAddTaskSnackbarOpen] = useState(false);\n    const { project } = useProjectContext();\n    const { currentUser } = useAuthContext();\n\n    const addTask = (task, dueDate) => {\n        database\n            .collection('tasks')\n            .add({\n                task: task,\n                completed: false,\n                projectId: project.id,\n                dueDate: dueDate,\n                userEmail: currentUser.email\n            })\n            .then(() => {\n                setAddTaskDialogOpen(false);\n                setAddTaskSnackbarOpen(true);\n            })\n            .catch(err => console.log(err.message));\n    };\n\n    return (\n        <>\n            <IconButton \n                className={styles.button} \n                color='primary'\n                onClick={() => setAddTaskDialogOpen(true)} >\n                <AddIcon />\n            </IconButton>  \n            <TaskDialog\n                dialogOpen={addTaskDialogOpen}\n                setDialogOpen={setAddTaskDialogOpen}\n                title='Add new task'\n                actionLabel=\"Add\"\n                action={addTask}\n                currTask={null} />\n            <ConfirmSnackbar\n                snackbarOpen={addTaskSnackbarOpen}\n                setSnackbarOpen={setAddTaskSnackbarOpen}\n                confirmMessage=\"Task was added!\" />\n        </>\n    );\n}\n\nexport default AddTask;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { useProjectContext } from '../../../../contexts';\nimport ProjectMenu from './ProjectMenu';\nimport AddTask from './AddTask';\n\nconst useStyles = makeStyles(() => ({\n    projectHeader: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        fontWeight: 600,\n        marginBottom: 19\n    },\n    button: {\n        padding: 1,\n        margin: '0 5px',\n    }\n}));\n\nconst ProjectHeader = () => {\n    const styles = useStyles();\n    const { project } = useProjectContext();\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const openProjectMenu = e => setAnchorEl(e.currentTarget);\n\n    return (\n        <Typography variant='h6' className={styles.projectHeader}>\n            {project && project.name}\n            <span>\n                {typeof project.id === 'string' &&\n                    <span>\n                        <AddTask />\n                        <IconButton \n                            className={styles.button} \n                            color='primary'\n                            onClick={openProjectMenu} >\n                            <MoreHorizIcon />   \n                        </IconButton>    \n                    </span>\n                }\n                <ProjectMenu \n                    anchorEl={anchorEl} \n                    setAnchorEl={setAnchorEl} />\n            </span>\n        </Typography>\n    );\n}\n\nexport default ProjectHeader;","import React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { default as MaterialCheckbox } from '@material-ui/core/Checkbox';\nimport { database } from '../../../../firebase';\n\nconst Checkbox = ({ task }) => {\n    const toggleTaskComplete = taskId => e => {    \n        database\n          .collection('tasks')\n          .doc(taskId)\n          .update({ completed: e.target.checked });\n    };\n\n    return (\n        <FormControlLabel\n            control={\n                <MaterialCheckbox\n                    checked={task.completed}\n                    size='small'\n                    color='primary'\n                    onChange={toggleTaskComplete(task.id)} />\n            } />\n    );\n}\n\nexport default Checkbox;","import React, { useState } from 'react';\nimport TaskDialog from '../../extras/TaskDialog';\nimport ConfirmSnackbar from '../../extras/ConfirmSnackbar';\nimport { database } from '../../../../firebase';\n\nconst EditTask = ({\n    editTaskDialogOpen,\n    setEditTaskDialogOpen,\n    currTask\n}) => {\n    const [editTaskSnackbarOpen, setEditTaskSnackbarOpen] = useState(false);\n\n    const updateTask = (task, dueDate) => {\n        database  \n          .collection('tasks')\n          .doc(currTask.id)\n          .update({\n            task,\n            dueDate\n          })\n          .then(() => {\n            setEditTaskDialogOpen(false);\n            setEditTaskSnackbarOpen(true);\n          });\n    };\n\n    return (\n        <>\n            <TaskDialog\n                dialogOpen={editTaskDialogOpen}\n                setDialogOpen={setEditTaskDialogOpen}\n                title=\"Edit task\"\n                actionLabel=\"Save\"\n                action={updateTask}\n                currTask={currTask} />\n            <ConfirmSnackbar\n                snackbarOpen={editTaskSnackbarOpen}\n                setSnackbarOpen={setEditTaskSnackbarOpen}\n                confirmMessage='Task was updated!' />\n        </>\n    );\n}\n\nexport default EditTask;","import React, { useState } from 'react';\nimport DeleteDialog from '../../extras/DeleteDialog';\nimport ConfirmSnackbar from '../../extras/ConfirmSnackbar';\nimport { database } from '../../../../firebase';\n\nconst DeleteTask = ({\n    deleteTaskDialogOpen,\n    setDeleteTaskDialogOpen,\n    currTask\n}) => {\n    const [deleteTaskSnackbarOpen, setDeleteTaskSnackbarOpen] = useState(false);\n\n    const deleteTask = () => e => {\n        database\n          .collection('tasks')\n          .doc(currTask.id)\n          .delete()\n          .then(() => {\n            setDeleteTaskDialogOpen(false);\n            setDeleteTaskSnackbarOpen(true);\n          })\n    };\n\n    return (\n        <>\n            <DeleteDialog\n                itemType=\"task\"\n                dialogOpen={deleteTaskDialogOpen}\n                setDialogOpen={setDeleteTaskDialogOpen}\n                deleteFunc={deleteTask} />\n            <ConfirmSnackbar\n                snackbarOpen={deleteTaskSnackbarOpen}\n                setSnackbarOpen={setDeleteTaskSnackbarOpen}\n                confirmMessage='Task was deleted!' />\n        </>\n    );\n};\n\nexport default DeleteTask;","import React, { useState } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { anchorOrigin, transformOrigin } from '../../../../constants';\nimport EditTask from './EditTask';\nimport DeleteTask from './DeleteTask';\n\nconst TaskMenu = ({ anchorEl, setAnchorEl, currTask }) => {\n    const [editTaskDialogOpen, setEditTaskDialogOpen] = useState(false);\n    const [deleteTaskDialogOpen, setDeleteTaskDialogOpen] = useState(false);\n\n    const proceedEditTask = () => {\n        setAnchorEl(false);\n        setEditTaskDialogOpen(true);\n    };\n\n    const proceedDeleteTask = () => {\n        setAnchorEl(false);\n        setDeleteTaskDialogOpen(true);\n    };\n\n    return (\n        <>\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={() => setAnchorEl(null)}\n                getContentAnchorEl={null}\n                anchorOrigin={anchorOrigin}\n                transformOrigin={transformOrigin} >\n                <MenuItem onClick={proceedEditTask} >\n                    Edit\n                </MenuItem>\n                <MenuItem onClick={proceedDeleteTask} >\n                    Delete\n                </MenuItem>\n            </Menu>\n\n            <EditTask\n                editTaskDialogOpen={editTaskDialogOpen}\n                setEditTaskDialogOpen={setEditTaskDialogOpen}\n                currTask={currTask} />\n\n            <DeleteTask\n                deleteTaskDialogOpen={deleteTaskDialogOpen}\n                setDeleteTaskDialogOpen={setDeleteTaskDialogOpen}\n                currTask={currTask} />\n        </>\n    );\n}\n\nexport default TaskMenu;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Divider from '@material-ui/core/Divider';\nimport { useProjectContext } from '../../../../contexts';\nimport Checkbox from './Checkbox';\nimport TaskMenu from './TaskMenu';\n\nconst useStyles = makeStyles(theme => ({\n    tasks: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    task: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    elipses: {\n      color: 'black',\n      width: 10,\n      height: 10,\n      marginRight: 6\n    },\n    dueDate: {\n        backgroundColor: 'rgba(25, 118, 210, 0.2)',\n        color: theme.palette.primary.main,\n        fontSize: 13,\n        fontWeight: 600,\n        borderRadius: 10,\n        padding: '5px 10px',\n        marginRight: 10\n    }\n}));\n\nconst Tasks = () => {\n    const styles = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [currTask, setCurrTask] = useState({});\n    const { tasks } = useProjectContext();\n\n    const openTaskMenu = task => e => {\n        setCurrTask(task);\n        setAnchorEl(e.currentTarget);\n    };\n\n    return (\n        <div>\n            <Typography className={styles.tasks}>\n                {tasks.map(task =>\n                    <span key={task.id} className={styles.task}>\n                        <span>\n                            <Checkbox task={task} />\n                            {task.task}\n                        </span>\n                        <span>\n                            <span className={styles.dueDate}>\n                                {task.dueDate}\n                            </span>\n                            <IconButton\n                                className={styles.elipses}\n                                onClick={openTaskMenu(task)} >\n                                <MoreHorizIcon />\n                            </IconButton>                            \n                        </span>\n                    </span>\n                )}\n            </Typography>\n            <Divider />\n            <TaskMenu \n                anchorEl={anchorEl}\n                setAnchorEl={setAnchorEl}\n                currTask={currTask} />\n        </div>\n    );\n}\n\nexport default Tasks;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ProjectHeader from './project-header';\nimport Tasks from './tasks';\n\nconst useStyles = makeStyles(() => ({\n  main: {\n    flexGrow: 1,\n    padding: 18\n  }\n}));\n\nconst Body = () => {\n  const styles = useStyles();\n\n  return (\n    <main className={styles.main}>\n      <Toolbar />\n      <ProjectHeader />\n      <Tasks />\n    </main>\n  );\n}\n\nexport default Body;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Navbar from './navbar';\nimport Sidebar from './sidebar';\nimport Body from './body';\n\nconst Main = () => {\n  return (\n    <div style={{display: 'flex'}}>\n      <CssBaseline />\n      <Navbar />\n      <Sidebar />\n      <Body />\n    </div>\n  );\n};\n\nexport default Main;","import React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { AuthProvider, ProjectProvider } from '../contexts';\nimport { PublicRoute, PrivateRoute } from './routes';\nimport SignUp from './auth/SignUp';\nimport SignIn from './auth/SignIn';\nimport ResetPassword from './auth/ResetPassword';\nimport Main from './main';\n\nconst App = () => {\n  return (\n    <Router>\n      <AuthProvider>\n        <Switch>\n\n          {/* Below pages are accessible without authentication */}\n          <PublicRoute path='/planr/sign-up' component={SignUp} />\n          <PublicRoute path='/planr/sign-in' component={SignIn} />\n          <PublicRoute path='/planr/reset-password' component={ResetPassword} />\n\n          {/* Below \"main\" page is accessible only after authentication */}\n          <ProjectProvider>\n            <PrivateRoute exact path='/planr' component={Main} />\n          </ProjectProvider>\n\n        </Switch>\n      </AuthProvider>      \n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}